/**
 * JSON : 클라이언트와 서버 간 HTTP 통신을 위한 텍스트 데이터 포맷 방식
 * Javascript에 종속되지 않는 독립적인 데이터 포맷
 * 대부분의 프로그래밍 언어에서 사용 가능
 */

// JSON 작성방식: Javascript의 객체 작성 방식과 유사

//Javascript Object
const book = {
    title: "노인과 바다",
    author: "해밍웨이",
    isSold: false,
    genre: ["소설", "비극"],
};

//JSON 문법 :  key 값(property)도 ""로 작성 ('는 사용불가)
// {
//     "title": "노인과 바다",
//     "author": "해밍웨이",
//     "isSold": false,
//     "genre": ["소설", "비극"],
// }

const jsonData = JSON.stringify (book);
console.log(typeof jsonData);
console.log(jsonData);
console.log(book);

console.log(jsonData.title); //문자열 타입이기때문에 프로퍼티 참조 불가
console.log(book.title); //객체이기 때문에 프로퍼티 값을 참조 가능

/**
 * JSON.stringfy()는 client측에서 서버로 데이터(일반적으로 객체)를 전송하기 위해 객체를 문자열화해야함
 * 문자열화 = 직렬화 (serialization)
 */

const books = [
    {id: 1, title: '여름', author: '이디스 워튼', isSold: true},
    {id: 1, title: '오만과 편견', author: '제인 오스틴', isSold: true},
    {id: 1, title: '동급생', author: '프레드 울만', isSold: false},
];

//배열을 JSON 포맷의 문자열로 변환
const jsonBookdata = JSON.stringify(books);
console.log(books);
console.log(jsonBookdata);
console.log(typeof jsonBookdata);
